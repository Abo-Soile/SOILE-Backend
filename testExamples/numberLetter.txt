# Loading images
gvar crosshair <- imagefile("http://ocean.danielwarna.com:8081/testimages/a578c12d-4951-488d-90a6-e230b10950fa/crosshair.jpg") 
gvar keydown <- imagefile("http://ocean.danielwarna.com:8081/testimages/a578c12d-4951-488d-90a6-e230b10950fa/keydown.png") 
gvar keyright <- imagefile("http://ocean.danielwarna.com:8081/testimages/a578c12d-4951-488d-90a6-e230b10950fa/keyright.png") 
gvar fortsatt <- imagefile("http://ocean.danielwarna.com:8081/testimages/edd1a4bd-fb05-46c9-aa0d-d282bf761c0a/fortsatt.png") 

gvar practiseerrors <- 0

gvar rounds <- 4

gvar clicked <- false
gvar answered <- false

gvar mess <- ""

gvar upRect <- rectangle(65 65 2)
gvar downRect <- rectangle(65 65 2)

val center <- {top:220 left:500}
val leftpos <- {top:200 left:200}
val rightpos <- {top:200 left:600}

val upPos <- {top:100 left:500}
val downPos <- {top:300 left:500}

val keypadpos <- {top:350 left:370}

#Functions
#------------
function click()
    clicked <- true
end

function answer()
  answered <- true
  resume()
end


intermezzo-phase Start
    plus(1 1)
    wait(seconds(2))
    #showmsg("I denna uppgift ser du ett bokstavs-sifferpar som uppenbarar sig i en av två rutor. Ena rutan befinner sig ovanför den andra. Ifall bokstavs-sifferparet uppenbarar sig i den övre rutan, bör du trycka på nedåtpilen ↓ ifall siffran är jämn eller på högerpilen → ifall siffran är udda. Ifalll bokstavs-sifferparet uppenbarar sig i den nedre rutan, bör du trycka på nedåtpilen ↓ ifall bokstaven är en vokal eller på högerpilen → ifall bokstaven är en konsonant. Tryck på Fortsätt för att se en demonstration av uppgiften.")
    #show(fortsatt keypadpos)
    
    #onmouseclick(fortsatt {action:resume})
    #wait(45656456465)
    
    #hidemsg()
    #hide(fortsatt)
    #onmouseclick(fortsatt)
end

intermezzo-phase Guide

    # Up - Even
    #-----------------------
    
    #SHowing and hiding crosshair
    wait(150)
    show(crosshair center)
    wait(300)
    hide(crosshair)
    
    # Creating a msgbox containing A8
    mess <- msgbox("A8" 40)

    # Showing instructions
    showmsg("Bokstavs-sifferparet uppenbarade sig i den övre rutan, alltså bör siffran kategoriseras. Siffran är jämn,               alltså tryck på nedåtpilen.")
    show(keydown keypadpos)
    show(mess upPos)
    show(upRect upPos)
    show(downRect downPos)

    # Waiting for the right answer
    resumeonkey("down")
    wait(56465489)
    
    # Clearing screen for the next example
    hidemsg()
    hide(mess)
    hide(keydown)
    hide(upRect)
    hide(downRect)
    
    # Down - Consonant
    #-----------------------
    wait(150)
    show(crosshair center)
    wait(300)
    hide(crosshair)
    
    mess <- msgbox("G5" 40)
    
    showmsg("Bokstavs-sifferparet uppenbarade sig i den nedre rutan, alltså bör bokstaven kategoriseras. Bokstaven är en konsonant, alltså tryck på högerpilen.")
    show(keyright keypadpos)
    show(mess downPos)
    show(upRect {top:120 left:upPos.left})
    show(downRect downPos)

    resumeonkey("right")
    wait(8859789)
    
    hidemsg()
    hide(mess)
    hide(keyright)
    hide(upRect)
    hide(downRect)
    
    wait(150)
    show(crosshair center)
    wait(300)
    hide(crosshair)
    
    
    #Instructions done
    #-----------------------
    showmsg("Nu får du göra några exempeluppgifter. Ifall bokstavs-sifferparet uppenbarar sig i den övre rutan, bör du trycka på nedåtpilen ↓ ifall siffran är jämn eller på högerpilen → ifall siffran är udda. Ifalll bokstavs-sifferparet uppenbarar sig i den nedre rutan, bör du trycka på nedåtpilen ↓ ifall bokstaven är en vokal eller på högerpilen → ifall bokstaven är en konsonant. Endast rutorna och fixeringskorset kommer att vara synliga på skärmen. Svara så snabbt du kan, men undvik fel. Varje bokstavs- sifferpar är synlig på rutan tills du tryckt på en av svarsknapparna, men högst i 3 sekunder. Tryck på ↑ nedåtpilen för att börja övningsuppgiften.")

    # Asking the user to press arrow down and waiting until he does
    show(keydown keypadpos)
    resumeonkey("down")
    wait(353453453453)
    
    # Hiding everything
    hide(keydown)
    hidemsg()
    wait(seconds(3))
end


interaction-phase Practise

  enterphase
    helptext("Enter practise")
    
    # Show instructions again if user failed the last practiseround
    if gt(practiseerrors 1)
    then
      showmsg("Vi tar det en gång till. Ifall bokstavs-sifferparet uppenbarar sig i den övre rutan, bör du trycka på nedåtpilen ↓ ifall siffran är jämn eller på högerpilen → ifall siffran är udda. Ifalll bokstavs-sifferparet uppenbarar sig i den nedre rutan, bör du trycka på nedåtpilen ↓ ifall bokstaven är en vokal eller på högerpilen → ifall bokstaven är en konsonant. Svara så snabbt du kan, men undvik fel. Varje bokstavs-sifferpar är synlig på rutan tills du tryckt på en av svarsknapparna, men högst i 3 sekunder. Tryck på nedåtpilen för att börja övningsuppgiften")
      show(keydown keypadpos)
      resumeonkey()
      wait(353453453453)
      
      hidemsg()
      hide(keydown)
    end
    
    # Setting errors to 0
    practiseerrors <- 0
    
    # Setting stimuli
    # text: what to show, ans = correct answer, pos = where to show it
    setstimuli([{text:"A5" ans:"r" pos: upPos}
                {text:"U9" ans:"d" pos: downPos}
                {text:"C6" ans:"r" pos: downPos}
                {text:"R4" ans:"d" pos: upPos}
    ])
  end
  
  leavephase
    helptext("Leaving practise")
  end
  
  beforeiteration
    plus(1 1)
    #helptext("Before stimuli iteration")
  end
  
  afteriteration
    #helptext("After stimuli iteration")
    plus(1 1)
  end
  
  iteration
    var s <- 0
    var box <- ""
    var pos <- leftpos

    clicked <- false

    s <- stimulus()
    #helptext(s)
    
    # Shwoing and hiding crosshair
    wait(150)
    show(crosshair center)
    wait(300)
    hide(crosshair)
    
    # Choosing which key corresponds to the correct answer
    # Calling click if user answers correctly
    if eq(s.ans "d")
    then
      onkeypress("down" click)
    else
      onkeypress("right" click)
    end
    
    # Showing everything
    box <- msgbox(s.text 40)
    show(box s.pos)
    show(upRect upPos)
    show(downRect downPos)
    
    # Waiting for a keypress
    resumeonkey()    
    wait(3000)
    
    # Hiding everything
    hide(box)
    hide(upRect)
    hide(downRect)
    onkeypress("right")
    onkeypress("down")

    # If user pressed the correct key -> user answerd correcty, else increase error count
    if clicked
    then 
      helptext("user answered correctly")
    else
      practiseerrors <- plus(practiseerrors 1)
    end
    
    wait(2000)
  end
end

# Repeating instructions
intermezzo-phase Repeatinstructions

    showmsg("Bra jobbat! Nu börjar uppgiften. Ifall bokstavs-sifferparet uppenbarar sig i den övre rutan, bör du trycka på nedåtpilen ↓ ifall siffran är jämn eller på högerpilen → ifall siffran är udda. Ifalll bokstavs- sifferparet uppenbarar sig i den nedre rutan, bör du trycka på nedåtpilen ↓ ifall bokstaven är en vokal eller på högerpilen → ifall bokstaven är en konsonant. Svara så snabbt du kan, men undvik fel. Tryck på nedåtpilen för att börja uppgiften.")
    show(keydown keypadpos)
    resumeonkey("down")
    wait(353453453453)
    
    hidemsg()
    hide(keydown)

end

interaction-phase Test

  enterphase
    helptext("Enter test")
    
    # Defining stimuli for the actual test
    setstimuli([{text:"A5" ans:"r" pos: upPos}
                {text:"C6" ans:"r" pos: downPos}
                {text:"A9" ans:"d" pos: downPos}
                {text:"U4" ans:"d" pos: upPos}
        ])
  end
  
  leavephase
    helptext("Leaving Test")
  end
  
  beforeiteration
    plus(1 1)
    #helptext("Before stimuli iteration")
  end
  
  # Creating a new storage row after each iteration
  afteriteration
    #helptext("After stimuli iteration")
    newrow()

  end
  
  iteration
    var s <- ""
    var i <- 0
    var box <- 0

    # User hasn't answered yet, so both are set to false
    answered <- false
    clicked <- false
    s <- stimulus()
    
    # Showing and hining crosshair
    wait(150)
    show(crosshair center)
    wait(300)
    hide(crosshair)
    
    box <- msgbox(s.text 40)
    
    # Starting timer
    starttimer()
    
    # Defining whihc button represents a correct answer
    if eq(s.ans "d")
    then
      onkeypress("down" click)
    else
      onkeypress("right" click)
    end
    
    # Showing stuff
    show(box s.pos)
    show(upRect upPos)
    show(downRect downPos)
    
    # Wait for 3 seconds or until a key is pressed
    onanykey(answer)
    wait(3000)
    
    # Time taken for user to answer
    i <- elapsedtime()
    
    # Disable keypresses
    onanykey()
    onkeypress("right")
    onkeypress("down")
    
    # Hide stuff
    hide(box)
    hide(upRect)
    hide(downRect)
    
    # clicked is set to true when the user answers correctly, 
   
    if clicked
    then 
      # So the answer is logged and the result is stored
      helptext("user answered correctly")
      storerow("correct" true)
    else
      # Else user didnt answer or answered incorrectly, answered is set to true
      # if the user pressed any button
      if answered
      then
        # User answerd, but incorrectly
        storerow("correct" false)
      else
        # User didn't answer, storing result
        storerow("correct" "ommitted")
      end
    end
    
    # Storing reactiontime
    if answered
    then
      storerow("rt" i)
    else
      storerow("rt" "nil")
    end
    
    storerow("stimuli" s)
 
  end
end

# Last phase, calculating results
intermezzo-phase FinalPhase
    plus(1 1)
    count("correct" true)
    count("correct" false)
    count("correct" "ommitted")
    average("rt")
end

transition
  start(Start),
  Start -> Guide,
  Guide -> Practise,
  # continue to real test if there was 1 or less incorrect answers
  Practise -> Repeatinstructions if(lt(practiseerrors 2)),
  # Repeat practise if there was more than one incorrect answer
  Practise -> Practise if(gt(practiseerrors 1)),
  Repeatinstructions -> Test,
  Test -> FinalPhase,
  final(FinalPhase)
end
