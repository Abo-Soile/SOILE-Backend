# Loading images
gvar bluebox <- imagefile("http://ocean.danielwarna.com:8081/testimages/a578c12d-4951-488d-90a6-e230b10950fa/bluebox.jpg") 
gvar redbox <- imagefile("http://ocean.danielwarna.com:8081/testimages/a578c12d-4951-488d-90a6-e230b10950fa/redbox.jpg") 
gvar crosshair <- imagefile("http://ocean.danielwarna.com:8081/testimages/a578c12d-4951-488d-90a6-e230b10950fa/crosshair.jpg") 
gvar keydown <- imagefile("http://ocean.danielwarna.com:8081/testimages/a578c12d-4951-488d-90a6-e230b10950fa/keydown.png") 
gvar keyright <- imagefile("http://ocean.danielwarna.com:8081/testimages/a578c12d-4951-488d-90a6-e230b10950fa/keyright.png") 
gvar fortsatt <- imagefile("http://ocean.danielwarna.com:8081/testimages/a578c12d-4951-488d-90a6-e230b10950fa/fortsatt.png") 


gvar practiseerrors <- 0

gvar rounds <- 4
gvar clicked <- false
gvar answered <- false

# Defining positions
val center <- {top:240 left:470}
val leftpos <- {top:200 left:200}
val rightpos <- {top:200 left:600}

val keypadpos <- {top:350 left:400}

function click()
    clicked <- true
end

function answer()
  answered <- true
  resume()
end

intermezzo-phase Start
    plus(1 1)
    #showmsg("I denna uppgift kommer du att se en röd eller blå fyrkant som uppenbarar sig på högra eller vänstra kanten av datorskärmen. Tryck på nedåtpilen ↓ ifall fyrkanten är blå eller på högerpilen → ifall fyrkanten är röd, oberoende av var fyrkanten uppenbarar sig. Mellan varje ny fyrkant visas ett fixeringskors som du bör fixera din blick på. Tryck på Fortsätt för att se en demonstration av uppgiften")
    #show(fortsatt keypadpos)
    
    #onmouseclick(fortsatt {action:resume})
    #wait(45656456465)
    
    #hidemsg()
    #hide(fortsatt)
    #onmouseclick(fortsatt)
end

# Telling the user what to do
intermezzo-phase Guide

    # Blue box - Left
    #-----------------------
    
    # Showing and hiding crosshair
    show(crosshair center)
    wait(800)
    hide(crosshair)
    wait(250)
    
    # Showing instructions and the box
    showmsg("Fyrkanten är blå, alltså bör du trycka på nedpil, Tryck på nedpil för att fortsätta")
    show(bluebox leftpos)
    show(keydown keypadpos)

    # Waiting until the user clicks arrow down
    resumeonkey("down")
    wait(56465489)
    
    # Clearing screen
    hidemsg()
    hide(bluebox)
    hide(keydown)
    
    # Red box right
    #-----------------------
    show(crosshair center)
    wait(800)
    hide(crosshair)    
    wait(250)
    
    showmsg("Fyrkanten är röd, alltså bör du trycka på högerpil, Tryck på högerpil för att fortsätta")
    show(redbox leftpos)
    show(keyright keypadpos)

    resumeonkey("right")
    wait(8859789)
    
    hidemsg()
    hide(redbox)
    hide(keyright)
    
    # Blue box right
    #-----------------------
    show(crosshair center)
    wait(800)
    hide(crosshair)    
    wait(250)
    
    showmsg("Fyrkanten är blå, alltså bör du trycka på nedpil, Tryck på nedpil för att fortsätta")
    show(bluebox rightpos)
    show(keydown keypadpos)

    resumeonkey("down")
    wait(8859789)
    
    hidemsg()
    hide(bluebox)
    hide(keydown)
    
    # Red box left
    #-----------------------
    show(crosshair center)
    wait(800)
    hide(crosshair)    
    wait(250)
    
    showmsg("Fyrkanten är röd, alltså bör du trycka på högerpil, Tryck på högerpil för att fortsätta")
    show(redbox rightpos)
    show(keyright keypadpos)

    resumeonkey("right")
    wait(8859789)
    
    hidemsg()
    hide(redbox)
    hide(keyright)
    
    #User finished the instruction round done
    #-----------------------
    showmsg("Nu får du göra några exempeluppgifter.Tryck på nedåtpilen ifall fyrkanten är blå eller på högerpilen ifall fyrkanten är röd. Endast fyrkanterna och fixeringskorset kommer att vara synliga på skärmen. Svara så snabbt du kan, men undvik fel. Varje fyrkant är synlig på rutan tills du tryckt på en av svarsknapparna, men högst i 1,5 sekunder. Tryck på nedåtpilen för att börja övningsuppgiften.")

    show(keydown keypadpos)
    resumeonkey("down")
    wait(353453453453)
    
    hide(keydown)
    hidemsg()
    wait(seconds(1))
end

# Practise round
interaction-phase Practise

  enterphase
    helptext("Enter practise")
    
    # Repeat instructions if the user made any errors, ig practiseerrors > 0
    if gt(practiseerrors 0)
    then
      showmsg("Vi tar det en gång till. Tryck på nedåtpilen ↓ ifall fyrkanten är blå eller på högerpilen → ifall fyrkanten är röd. Svara så snabbt du kan, men undvik fel. Varje fyrkant är synlig på rutan tills du tryckt på en av svarsknapparna, men högst i 1,5 sekunder. Tryck på nedåtpilen för att börja ↑ övningsuppgiften")
      show(keydown keypadpos)
      resumeonkey()
      wait(353453453453)
      
      hidemsg()
      hide(keydown)
    end
    
    # Setting errors to 0 before starting a new practisround
    practiseerrors <- 0
    
    # Defining practise stimuli,
    # Box: b = blue box  pos l = display box to the left
    # Box: r = red box   pos r = display box to the right
    setstimuli([{box:"b" pos:"l"}
                {box:"r" pos:"r"}
                {box:"b" pos:"r"}
                {box:"r" pos:"l"}
                ])
  end
  
  leavephase
    helptext("Leaving practise")
  end
  
  beforeiteration
    plus(1 1)
    #helptext("Before stimuli iteration")
  end
  
  afteriteration
    #helptext("After stimuli iteration")
    plus(1 1)
  end
  
  iteration
    # Defining variables
    var s <- 0
    var box <- redbox
    var pos <- leftpos

    clicked <- false
    
    s <- stimulus()
    
    # Figuring out where the bix should be placed by comparing stimuli.pos
    if eq(s.pos "r") 
    then
      pos <- rightpos
    else
      pos <- leftpos
    end
    
    # Showing and hidning crosshair
    show(crosshair center)
    wait(800)
    hide(crosshair)
    wait(250)
    
    # The function "click" is called if the users anwers correctly
    if eq(s.box "b")
    then
      box <- bluebox
      onkeypress("down" click)
    else
      box <- redbox
      onkeypress("right" click)
    end
    
    # Whowing box
    show(box pos)
    
    # Box is shown for 1.5 seconds, answering right or wrong makes it disappear
    resumeonkey()
    wait(1500)
    
    # Hiding the box and and disabling keypresses
    hide(box)
    onkeypress("right")
    onkeypress("down")
    
    # clicked is set to true in the click function, i.e. the user ansered correctly
    if clicked
    then 
      helptext("user answered correctly")
    else
      # Wrong answer add 1 to errors
      practiseerrors <- plus(practiseerrors 1)
    end
 
  end
end

# Repeating instructions
intermezzo-phase Repeatinstructions
    showmsg("Bra jobbat! Nu börjar uppgiften. Tryck på nedåtpilen ↓ ifall fyrkanten är blå eller på högerpilen → ifall fyrkanten är röd. Svara så snabbt du kan, men undvik fel. Tryck på nedåtpilen för att börja uppgiften.")
    show(keydown keypadpos)
    resumeonkey("down")
    wait(353453453453)

    hidemsg()
    hide(keydown)

end

# The actual test
interaction-phase Test

  enterphase
    helptext("Entering test")
    
    setstimuli([{box:"r" pos:"r"}
                {box:"b" pos:"l"}
                {box:"b" pos:"r"}
                {box:"r" pos:"r"}
                {box:"r" pos:"l"}
                ])
  end
  
  leavephase
    helptext("Leaving test")
  end
  
  beforeiteration
    plus(1 1)
    #helptext("Before stimuli iteration")
  end
  
  afteriteration
    # Starting a new resultrow
    newrow()

  end
  
  iteration
    var s <- 0
    var i <- 0
    var box <- redbox
    var pos <- leftpos

    # Clicked = user answered correctly
    # Answered = did the user press any button at all
    clicked <- false
    answered <- false
    
    s <- stimulus()
    
    # Where to show the box
    if eq(s.pos "r") 
    then
      pos <- rightpos
    else
      pos <- leftpos
    end
    
    show(crosshair center)
    wait(800)
    hide(crosshair)
    wait(250)
    
    # Starting timer
    starttimer()
    
    # Deciding 2hich box should be shown and which key is the right one
    if eq(s.box "b")
    then
      box <- bluebox
      onkeypress("down" click)
    else
      box <- redbox
      onkeypress("right" click)
    end
    
    show(box pos)
    
    onanykey(answer)
    wait(1500)
    
    # Store reaction time
    i <- elapsedtime()
    
    # Disable keypresses
    onkeypress("right")
    onkeypress("down")
    onanykey()
    hide(box)

    # Computing results
    if clicked
    then 
      # User answered correctly
      helptext("user answered correctly")
      storerow("correct" true)
      storerow("rt" i)
    else
      if answered
      then
        # User answered incorrecly
        storerow("correct" false)
        storerow("rt" i)
      else
        # User didn't answer
        storerow("correct" "ommitted")
        storerow("rt" "nil")
      end
    end
    
    # Storing stimuli data in results
    storerow("stimuli" s)
 
  end
end

# The end, calculating result aggragations
intermezzo-phase FinalPhase
    plus(1 1)
    
    #Storing data
    count("correct" true)
    count("correct" false)
    count("correct" "ommitted")
    average("rt")
end

transition
  start(Start),
  Start -> Guide,
  Guide -> Practise,
  Practise -> Repeatinstructions if(lt(practiseerrors 2)), # User passed the practise round,
  Practise -> Practise if(gt(practiseerrors 1)),           # Repeat practis if errors > 0
  Repeatinstructions -> Test,
  Test -> FinalPhase,
  final(FinalPhase)
end